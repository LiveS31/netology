<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8b9624af-ee17-4f29-8d56-4b2db249a0f6" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celary.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_base/.celary.txt.kate-swp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_base/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_base/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_base/tasks.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/.env.test" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_dockerized_netology-main/tasks.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_netology-main/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_netology-main/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_netology-main/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_netology-main/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_netology-main/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_minimal_netology-main/tasks.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/Dockerfile.celery" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/celery_app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/example/valeri_nikolaev.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/example/zhan_zhar.jpeg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/face_checker.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/models/dlib_face_recognition_resnet_model_v1.dat" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/models/shape_predictor_68_face_landmarks.dat" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/requests_example.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/run.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/app/run_celery.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/celery_netology-main/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/example/valeri_nikolaev.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/example/zhan_zhar.jpeg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/face_checker.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/models/dlib_face_recognition_resnet_model_v1.dat" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/models/shape_predictor_68_face_landmarks.dat" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/request_example.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Celery/flask_celery_example/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_celery/app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_celery/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_celery/files/lama_300px.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_celery/request_example.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_celery/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_celery/upscale/EDSR_x2.pb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../python-final-diplom" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../.idea/netology.iml" beforeDir="false" afterPath="$PROJECT_DIR$/../.idea/netology.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DJANGO/konsp.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../DJANGO/konsp.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DevOp/Doсkers/dz_1_aiohttp/model.py" beforeDir="false" afterPath="$PROJECT_DIR$/../DevOp/Doсkers/dz_1_aiohttp/model.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../base_data/.dz5_python.md.kate-swp" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2XGm0WLuUb9Y95EZrp57wzvIIaZ" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/lives/Документы/уроки/netology/python-final-diplom&quot;
  }
}</component>
  <component name="RunManager" selected="Python.manage">
    <configuration name="manage" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="python-final-diplom5" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/orders" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/orders/manage.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="orders.backend: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="backend" />
            </list>
          </option>
          <option name="sourceFilePath" value="orders/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="orders.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="orders/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="shopAPI/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="orders/shopAPI/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.manage" />
        <item itemvalue="Docker.shopAPI/Dockerfile" />
        <item itemvalue="Docker.orders.backend: Compose Deployment" />
        <item itemvalue="Docker.orders.db: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8b9624af-ee17-4f29-8d56-4b2db249a0f6" name="Changes" comment="" />
      <created>1698263568456</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698263568456</updated>
    </task>
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="executable:docker" />
  </component>
</project>